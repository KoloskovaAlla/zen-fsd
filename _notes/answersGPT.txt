/**
 * @typedef {Object} Language
 * @property {string} text
 * @property {string} value
 */

/**
 * @typedef {Object} LangState
 * @property {Function} getLang
 * @property {boolean} isLoading
 * @property {Language[]} languages
 * @property {string} errorMessage
 * @property {object} setLang
 * @property {string} lang
 */

/**
 * @typedef {import('@reduxjs/toolkit').AsyncThunkConfig} AsyncThunkConfig
 * @typedef {import('@reduxjs/toolkit').AsyncThunk<ReturnType, Payload, AsyncThunkConfig>} GetLangAsyncThunk
 */

/**
 * @type {GetLangAsyncThunk}
 */
export const getLang = createAsyncThunk(
  'lang/getLang',
  async (payload, thunkAPI) => {
    // Асинхронная логика действия
  }
);